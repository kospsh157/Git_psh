<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.nextcore.portal.user.mapper.UserMapper">

    <select id="getUserAdmin" resultType="User">
        SELECT
          *
        FROM
          IX_USER
        WHERE
          USERID = 'admin'
    </select>
    
    <select id="getType0" resultType="java.util.LinkedHashMap" parameterType="com.nextcore.portal.user.domain.UserVO">
    	/* userMapper.getType0 */
        SELECT 
		 ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.TOTALCALL ELSE 0 END),0) AS ATOTALCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ENDCALL ELSE 0 END),0) AS AENDCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.RVALUE ELSE 0 END),0) AS ARVALUE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.DELAY ELSE 0 END),0) AS ADELAY
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.LOSS ELSE 0 END),0) AS ALOSS
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.JITTER ELSE 0 END),0) AS AJITTER
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.TOTALMEDIAALARM ELSE 0 END),0) AS ATOTALMEDIAALARM
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.TOTALSIGNALALARM ELSE 0 END),0) AS ATOTALSIGNALALARM
		,CASE WHEN ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0) = 0
			  THEN DATE_FORMAT(DATE_ADD(DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %T'), INTERVAL +0 HOUR), '%Y-%m-%d %H:%i:00')
			  ELSE DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') END AS ACOLDATE
		,DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %T') AS OLDACOLDATE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.TOTALCALL ELSE 0 END),0) AS BTOTALCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.ENDCALL ELSE 0 END),0) AS BENDCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.RVALUE ELSE 0 END),0) AS BRVALUE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.DELAY ELSE 0 END),0) AS BDELAY
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.LOSS ELSE 0 END),0) AS BLOSS
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.JITTER ELSE 0 END),0) AS BJITTER
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.TOTALMEDIAALARM ELSE 0 END),0) AS BTOTALMEDIAALARM
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.TOTALSIGNALALARM ELSE 0 END),0) AS BTOTALSIGNALALARM
		,CASE WHEN ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0) = 0
			  THEN DATE_FORMAT(DATE_ADD(DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %T'), INTERVAL -168 HOUR), '%Y-%m-%d %H:%i:00')
			  ELSE DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') END AS BCOLDATE
		,DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') OLDBCOLDATE
		,T.GCOLDATE AS COLDATES
		FROM
		(
			SELECT *
			FROM 
			(
				SELECT A.*, @ROWNUM:= @ROWNUM+1 AS ROWNUM 
				FROM 
				(
					SELECT SEQ, DEVICE_NUM, STARTTIME, ENDTIME, TIMESCALE, SUM(TOTALCALL) TOTALCALL, SUM(ENDCALL) ENDCALL
						 , SUM(RVALUE) RVALUE, SUM(DELAY) DELAY, SUM(LOSS) LOSS, SUM(JITTER) JITTER, SUM(TOTALMEDIAALARM) TOTALMEDIAALARM, SUM(TOTALSIGNALALARM) TOTALSIGNALALARM, 
					COLDATE as ACOLDATE, '' AS BCOLDATE, DATE_FORMAT(DATE_ADD(COLDATE, INTERVAL -0 HOUR), '%Y-%m-%d %H:%i') AS GCOLDATE, 'A' as TIMETYPE
					FROM NC_P_VQMS_TYPE0_T
					WHERE 1=1
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &gt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -24 HOUR), '%Y-%m-%d %H:%i:00')
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &lt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL 0 HOUR), '%Y-%m-%d %H:%i:00')
					<if test = 'vqms == null or vqms == "1" ' >
						AND DEVICE_NUM = 1
					</if>
					<if test = 'vqms == "2" ' >
						AND DEVICE_NUM = 2
					</if>
					GROUP BY COLDATE
				) A, ( SELECT @ROWNUM:=0 ) R
				UNION ALL
				SELECT B.*, @ROWNUM2:= @ROWNUM2+1 AS ROWNUM 
				FROM (
					SELECT SEQ, DEVICE_NUM, STARTTIME, ENDTIME, TIMESCALE, SUM(TOTALCALL) TOTALCALL, SUM(ENDCALL) ENDCALL
						 , SUM(RVALUE) RVALUE, SUM(DELAY) DELAY, SUM(LOSS) LOSS, SUM(JITTER) JITTER, SUM(TOTALMEDIAALARM) TOTALMEDIAALARM, SUM(TOTALSIGNALALARM) TOTALSIGNALALARM, 
					'' as ACOLDATE, COLDATE AS BCOLDATE, DATE_FORMAT(DATE_ADD(COLDATE, INTERVAL +144 HOUR), '%Y-%m-%d %H:%i') AS GCOLDATE, 'B' AS TIMETYPE
					FROM NC_P_VQMS_TYPE0_T
					WHERE 1=1
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &gt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -168 HOUR), '%Y-%m-%d %H:%i:00')
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &lt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -144 HOUR), '%Y-%m-%d %H:%i:00')
					<if test = 'vqms == null or vqms == "1" ' >
						AND DEVICE_NUM = 1
					</if>
					<if test = 'vqms == "2" ' >
						AND DEVICE_NUM = 2
					</if>
					GROUP BY COLDATE
				) B, ( SELECT @ROWNUM2:=0 ) R
			) F
			ORDER BY F.ROWNUM, F.TIMETYPE
		) T
		GROUP BY T.GCOLDATE
		ORDER BY COLDATES
    </select>
    
    <select id="getType1" resultType="java.util.LinkedHashMap" parameterType="com.nextcore.portal.user.domain.UserVO">
    	/* userMapper.getType1 */
    	SELECT 
		 ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.TOTALBPS ELSE 0 END),0) AS ATOTALBPS
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.SIPBPS ELSE 0 END),0) AS ASIPBPS
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.RTPBPS ELSE 0 END),0) AS ARTPBPS
		,CASE WHEN ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0) = 0
			  THEN DATE_FORMAT(DATE_ADD(DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %T'), INTERVAL +0 HOUR), '%Y-%m-%d %H:%i:00')
			  ELSE DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') END AS ACOLDATE
		,DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %T') AS OLDACOLDATE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.TOTALBPS ELSE 0 END),0) AS BTOTALBPS
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.SIPBPS ELSE 0 END),0) AS BSIPBPS
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.RTPBPS ELSE 0 END),0) AS BRTPBPS
		,CASE WHEN ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0) = 0
			  THEN DATE_FORMAT(DATE_ADD(DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %T'), INTERVAL -168 HOUR), '%Y-%m-%d %H:%i:00')
			  ELSE DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') END AS BCOLDATE
		,DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') OLDBCOLDATE
		,T.GCOLDATE AS COLDATES
		FROM
		(
			SELECT *
			FROM 
			(
				SELECT A.*, @ROWNUM:= @ROWNUM+1 AS ROWNUM 
				FROM 
				(
					SELECT SEQ, DEVICE_NUM, CURRTIME, SUM(TOTALBPS) TOTALBPS, SUM(SIPBPS) SIPBPS, SUM(RTPBPS) RTPBPS
						  ,COLDATE as ACOLDATE, '' AS BCOLDATE, DATE_FORMAT(DATE_ADD(COLDATE, INTERVAL -0 HOUR), '%Y-%m-%d %H:%i') AS GCOLDATE, 'A' as TIMETYPE
					FROM NC_P_VQMS_TYPE1_T
					WHERE 1=1
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &gt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -24 HOUR), '%Y-%m-%d %H:%i:00')
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &lt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL +0 HOUR), '%Y-%m-%d %H:%i:00')
					<if test = 'vqms == null or vqms == "1" ' >
						AND DEVICE_NUM = 1
					</if>
					<if test = 'vqms == "2" ' >
						AND DEVICE_NUM = 2
					</if>
					GROUP BY COLDATE
				) A, ( SELECT @ROWNUM:=0 ) R
				UNION ALL
				SELECT B.*, @ROWNUM2:= @ROWNUM2+1 AS ROWNUM 
				FROM (
					SELECT SEQ, DEVICE_NUM, CURRTIME, SUM(TOTALBPS) TOTALBPS, SUM(SIPBPS) SIPBPS, SUM(RTPBPS) RTPBPS
						  ,'' as ACOLDATE, COLDATE AS BCOLDATE, DATE_FORMAT(DATE_ADD(COLDATE, INTERVAL +168 HOUR), '%Y-%m-%d %H:%i') AS GCOLDATE, 'B' AS TIMETYPE
					FROM NC_P_VQMS_TYPE1_T
					WHERE 1=1
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &gt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -168 HOUR), '%Y-%m-%d %H:%i:00')
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &lt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -144 HOUR), '%Y-%m-%d %H:%i:00')
					<if test = 'vqms == null or vqms == "1" ' >
						AND DEVICE_NUM = 1
					</if>
					<if test = 'vqms == "2" ' >
						AND DEVICE_NUM = 2
					</if>
					GROUP BY COLDATE
				) B, ( SELECT @ROWNUM2:=0 ) R
			) F
			ORDER BY F.ROWNUM, F.TIMETYPE
		) T
		GROUP BY T.GCOLDATE
		ORDER BY COLDATES
   	</select>
   	
   	<select id="getType2" resultType="java.util.LinkedHashMap" parameterType="com.nextcore.portal.user.domain.UserVO">
    	/* userMapper.getType2 */
    	SELECT 
		 ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.TOTALCALL ELSE 0 end),0) as ATOTALCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ENDCALL ELSE 0 end),0) AS AENDCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.CRATE ELSE 0 end),0) as ACRATE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ERATE ELSE 0 end),0) as AERATE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.AVGR ELSE 0 end),0) AS AAVGR
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.INMCC ELSE 0 end),0) as AINMCC
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.OUTMCC ELSE 0 end),0) as AOUTMCC
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.INTOTALCALL ELSE 0 end),0) AS AINTOTALCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.OUTTOTALCALL ELSE 0 end),0) as AOUTTOTALCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.INENDCALL ELSE 0 end),0) as AINENDCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.OUTENDCALL ELSE 0 end),0) AS AOUTENDCALL
		,CASE WHEN ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0) = 0
			  THEN DATE_FORMAT(DATE_ADD(DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %T'), INTERVAL +0 HOUR), '%Y-%m-%d %H:%i:00')
			  ELSE DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') END AS ACOLDATE
		,DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %T') AS OLDACOLDATE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.TOTALCALL ELSE 0 end),0) as BTOTALCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.ENDCALL ELSE 0 end),0) AS BENDCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.CRATE ELSE 0 end),0) as BCRATE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.ERATE ELSE 0 end),0) as BERATE
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.AVGR ELSE 0 end),0) AS BAVGR
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.INMCC ELSE 0 end),0) as BINMCC
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.OUTMCC ELSE 0 end),0) as BOUTMCC
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.INTOTALCALL ELSE 0 end),0) AS BINTOTALCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.OUTTOTALCALL ELSE 0 end),0) as BOUTTOTALCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.INENDCALL ELSE 0 end),0) as BINENDCALL
		,ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.OUTENDCALL ELSE 0 end),0) AS BOUTENDCALL
		,CASE WHEN ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0) = 0
			  THEN DATE_FORMAT(DATE_ADD(DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'A' THEN T.ACOLDATE ELSE '' END),0), '%Y-%m-%d %T'), INTERVAL -168 HOUR), '%Y-%m-%d %H:%i:00')
			  ELSE DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') END AS BCOLDATE
		,DATE_FORMAT(ROUND(SUM(CASE WHEN T.TIMETYPE = 'B' THEN T.BCOLDATE ELSE '' END),0), '%Y-%m-%d %H:%i:00') OLDBCOLDATE
		,T.GCOLDATE AS COLDATES
		FROM
		(
			SELECT *
			FROM 
			(
				SELECT A.*, @ROWNUM:= @ROWNUM+1 AS ROWNUM 
				FROM 
				(
					SELECT SEQ, DEVICE_NUM, CURRTIME, 
						SUM(TOTALCALL) TOTALCALL, SUM(ENDCALL) ENDCALL, SUM(CRATE) CRATE, SUM(ERATE) ERATE, SUM(AVGR) AVGR, SUM(INMCC) INMCC, SUM(OUTMCC) OUTMCC, 
						SUM(INTOTALCALL) INTOTALCALL, SUM(OUTTOTALCALL) OUTTOTALCALL, SUM(INENDCALL) INENDCALL, SUM(OUTENDCALL) OUTENDCALL
						  ,COLDATE as ACOLDATE, '' AS BCOLDATE, DATE_FORMAT(DATE_ADD(COLDATE, INTERVAL -0 HOUR), '%Y-%m-%d %H:%i') AS GCOLDATE, 'A' as TIMETYPE
					FROM NC_P_VQMS_TYPE2_T
					WHERE 1=1
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &gt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -24 HOUR), '%Y-%m-%d %H:%i:00')
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &lt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL +0 HOUR), '%Y-%m-%d %H:%i:00')
					<if test = 'vqms == null or vqms == "1" ' >
						AND DEVICE_NUM = 1
					</if>
					<if test = 'vqms == "2" ' >
						AND DEVICE_NUM = 2
					</if>
					GROUP BY COLDATE
				) A, ( SELECT @ROWNUM:=0 ) R
				UNION ALL
				SELECT B.*, @ROWNUM2:= @ROWNUM2+1 AS ROWNUM 
				FROM (
					SELECT SEQ, DEVICE_NUM, CURRTIME,
						SUM(TOTALCALL) TOTALCALL, SUM(ENDCALL) ENDCALL, SUM(CRATE) CRATE, SUM(ERATE) ERATE, SUM(AVGR) AVGR, SUM(INMCC) INMCC, SUM(OUTMCC) OUTMCC, 
						SUM(INTOTALCALL) INTOTALCALL, SUM(OUTTOTALCALL) OUTTOTALCALL, SUM(INENDCALL) INENDCALL, SUM(OUTENDCALL) OUTENDCALL
						  ,'' as ACOLDATE, COLDATE AS BCOLDATE, DATE_FORMAT(DATE_ADD(COLDATE, INTERVAL +168 HOUR), '%Y-%m-%d %H:%i') AS GCOLDATE, 'B' AS TIMETYPE
					FROM NC_P_VQMS_TYPE2_T
					WHERE 1=1
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &gt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -168 HOUR), '%Y-%m-%d %H:%i:00')
					AND DATE_FORMAT(COLDATE, '%Y-%m-%d %H:%i:00') &lt;= DATE_FORMAT(DATE_ADD(NOW(), INTERVAL -144 HOUR), '%Y-%m-%d %H:%i:00')
					<if test = 'vqms == null or vqms == "1" ' >
						AND DEVICE_NUM = 1
					</if>
					<if test = 'vqms == "2" ' >
						AND DEVICE_NUM = 2
					</if>
					GROUP BY COLDATE
				) B, ( SELECT @ROWNUM2:=0 ) R
			) F
			ORDER BY F.ROWNUM, F.TIMETYPE
		) T
		GROUP BY T.GCOLDATE
		ORDER BY COLDATES
   	</select>
   	
   	<select id="getType3" resultType="java.util.LinkedHashMap" parameterType="com.nextcore.portal.user.domain.UserVO">
    	/* userMapper.getType3 */
    	SELECT SEQ, DEVICE_NUM, CODECTYPE, RVALUETHRESHOLD, CRITICAL, MAJOR, WARNING, COLDATE
		FROM NC_P_VQMS_TYPE3_T
    	ORDER BY COLDATE DESC
    	LIMIT 1
   	</select>
   	
   	<select id="getTrapList" resultType="java.util.LinkedHashMap">
   		/* userMapper.getTrapList */
   		SELECT B.NETNM, A.DKEY, A.CB_INDEX, A.SLOT_INDEX, A.CH_INDEX, DATE_FORMAT(A.OCDATE, '%Y-%m-%d %H:%i:%s') OCDATE, A.TRAPMSG, A.ALARM_ID, A.FALEVEL, A.USERID, A.USERMSG, A.MGINDEX 
		FROM NC_F_SCME_TRAP_LIST_T A
		JOIN NC_R_DEVICE_T B
		ON A.DKEY = B.DKEY
		WHERE A.USERMSG != '1'
		ORDER BY OCDATE DESC
   	</select>
   	
   	<select id="setWebsocket" parameterType="java.lang.String">
   		/* userMapper.setWebsocket */
   		INSERT INTO NC_WEBSOCKET_T
		(MESSAGE)
		VALUES(#{value})
   	</select>
   	
   	<select id="getDevice" parameterType="java.lang.String" resultType="java.util.LinkedHashMap">
   		/* userMapper.getDevice  */
   		SELECT IFNULL(P.DKEY,'') DKEY, IFNULL(P.IPPHONE_CNT,'') IPTCNT, IFNULL(P.MG,'') MG, IFNULL(P.GETDATE,'') GETDATE, IFNULL(P.CPUUTIL,'') CPUUTIL, IFNULL(P.MEMUTIL,'') MEMUTIL, IFNULL(P.SIZEUTIL,'') SIZEUTIL
		FROM
		(
			SELECT A.DKEY, A.IPPHONE_CNT, A.MG, B.GETDATE, B.CPUUTIL, C.MEMUTIL, D.SIZEUTIL
			FROM NC_R_DEVICE_T A
			LEFT OUTER JOIN 
				(SELECT * FROM NC_P_DAY_CPU_T WHERE DKEY =${value} ORDER BY GETDATE DESC LIMIT 1) B
			ON A.DKEY = B.DKEY
			LEFT OUTER JOIN 
				(SELECT * FROM NC_P_DAY_MEM_T WHERE DKEY =${value} ORDER BY GETDATE DESC LIMIT 1) C
			ON A.DKEY = C.DKEY
			LEFT OUTER JOIN 
				(SELECT AVG(SIZEUTIL) AS SIZEUTIL, DKEY, GETDATE  FROM NC_P_DAY_FS_T
				 WHERE GETDATE = (SELECT MAX(GETDATE) FROM NC_P_DAY_FS_T) AND DKEY =${value}
				 GROUP BY DKEY) D
			ON A.DKEY = D.DKEY
			ORDER BY B.GETDATE, C.GETDATE, D.GETDATE
		) P
		WHERE P.DKEY =${value}
		ORDER BY P.GETDATE
		LIMIT 1
<!--    		SELECT IFNULL(P.DKEY,'') DKEY, IFNULL(P.IPPHONE_CNT,'') IPTCNT, IFNULL(P.MG,'') MG, IFNULL(P.GETDATE,'') GETDATE, IFNULL(P.CPUUTIL,'') CPUUTIL, IFNULL(P.MEMUTIL,'') MEMUTIL, IFNULL(P.SIZEUTIL,'') SIZEUTIL -->
<!-- 		FROM -->
<!-- 		( -->
<!-- 			SELECT A.DKEY, A.IPPHONE_CNT, A.MG, B.GETDATE, B.CPUUTIL, C.MEMUTIL, D.SIZEUTIL -->
<!-- 			FROM NC_R_DEVICE_T A -->
<!-- 			LEFT OUTER JOIN NC_P_DAY_CPU_T B -->
<!-- 			ON A.DKEY = B.DKEY -->
<!-- 			LEFT OUTER JOIN NC_P_DAY_MEM_T C -->
<!-- 			ON A.DKEY = C.DKEY -->
<!-- 			LEFT OUTER JOIN  -->
<!-- 				(SELECT AVG(SIZEUTIL) AS SIZEUTIL, DKEY, GETDATE  FROM NC_P_DAY_FS_T -->
<!-- 				 WHERE GETDATE = (SELECT MAX(GETDATE) FROM NC_P_DAY_FS_T) -->
<!-- 				 GROUP BY DKEY) D -->
<!-- 			ON A.DKEY = D.DKEY -->
<!-- 			ORDER BY B.GETDATE, C.GETDATE, D.GETDATE -->
<!-- 		) P -->
<!-- 		WHERE P.DKEY = ${value} -->
<!-- 		ORDER BY P.GETDATE -->
<!-- 		LIMIT 1 -->
   	</select>
   	
   	<update id="setDevice" parameterType="java.util.Map">
   		/* setDevice */
   		UPDATE NC_R_DEVICE_t
		SET IPPHONE_CNT=${IPTCNT}, MG=#{MG}
		WHERE DKEY=${DKEY}
   	</update>
   	
   	<update id="updateFaultAck" parameterType="java.util.Map">
   		/* updateFaultAck */
   		UPDATE NC_F_SCME_TRAP_LIST_T
		SET USERMSG='1'
		WHERE DKEY=${DKEY} AND OCDATE=DATE_FORMAT(#{OCDATE}, '%Y%m%d%H%i%s')  AND TRAPMSG=#{TRAPMSG}
   	</update>
    
    
</mapper>









