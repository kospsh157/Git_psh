// var 가진 문제
/*
    1. 정의된 변수가 함수 스코프를 가진다. 
    for( var i = 0; i < 10; i++){
        console.log(i)
    }
    console.log(i)
    // 함수단위이기 때문에 위에서는 for문을 벗어나 i가 접근가능하다.  
    // 위에서는 함수가 정의되어 있지 않다. >> 그래서 var로 정의된 변수는 마치 전역변수와도 같다!!

    2. 호이스팅
    var로 정의된 변수는 자동으로 블록 최상단으로 끌어올려진다. 
    이를 호이스팅이라고 한다.

    console.log(myVar); // undefined
    var myVar = 1; 
    
    특이하게도 변수선언을 나중에 했음에도 오류는 나지 않는다. 다만, undefined로 나온다.
    이는 직관적이지 않고 실수를 유발하기때문에 호이스팅은 좋지 않다. 다른 언어에서는 찾아보기도 힘들다.


    3. 정의된 변수를 다시 재정의 할 수 있다.
    var myVar1 = 1;
    var myVar1 = 2;

    위가 오류가 없다. 이또한 역시 실수를 유발할 수 있으므로 좋지 않다. 


*/


// var 의 문제를 해결하는 cosnt, let
/*
    1. var는 함수 스코프였지만 const, let은 블록 스코프이다. 
    2. 중복된 선언을 할 수 없다.
    3. 호이스팅이 여전히 되나, var처럼 선언도 안되어 있는 것을 먼저 쓸 수는 없다. 
    4. 호이스팅에 관한 자세한 개념은 코어 자바스크립트에서 배우자.

*/


