// 이번에는 노드 자체에서 자아주는 에러를 알아보자
const fs = require('fs');

setInterval( () => {
    fs.unlink('./abcdefg.js', (err) => {
        if(err){
            console.log(err);
        }
    });
}, 1000);

// fs.unlink() 의 경우 내장메서드이며, 지금은 promises 형태가 아니지만, 내부적으로 에러를 받는 콜백함수를 저렇게 써주면 
// 에러가 났을 때 콜백함수로 로그를 표시할 수 있다. 

// 위에서 핵심은 노드 내무 메서드는 따로 try/catch를 해주지 않아도 에러때문에 서버가(= 노드 프로세스) 죽지 않는다는 소리이다.
// 단지 로그로 기록해두고, 나중에 찾아서 해결하면 된다. 

// throw를 이용한 에러잡기는 에러가 발생하면 throw 해버리는데, 이때 노드프로세스가 멈춘다.
// 따라서 throw 하는 경우에는 반드시 try/catch문으로 throw한 에러를 잡아야 한다.

// 다음은 프로미스의 에러를 간단히 살펴보자 error3.js