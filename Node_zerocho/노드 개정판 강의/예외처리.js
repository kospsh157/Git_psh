// 노드에서는 중요한 처리이다. 왜냐면 싱글쓰레드라서 쓰레드 하나가 고장나면 노드 쓰레드가 죽기 때문이다.

// 노드는 기본적으로 싱글 스레드라 스레드가 멈춘다는 것은 프로세스가 멈춘다는 것이다.

// 에러처리는 필수이다.

// 다른언어에서는 에러와 예외를 다른 객체로 치는데
// 자바스크립트에서는 둘 다 에러 객체가 관리한다.

// 예러처리하기 방법
/*
    1. 에러가 발생 할 만한 곳을 try catch 로 감싸준다. 
    (무조건 하기 보다는 안해도 될 곳: 즉 에러가 나도 프로세스가 죽지않는 곳에는 안해도 된다.)
    (노드에서 제공하는 기본 비동기 관련 객체들은 대부분 에러로 인해 죽지는 않는다.)

    2. UnhandledPromiseRejectionWarning: Error :ENOENT: no Such file or directory,...(이하생략)
    (위 에러는 프로미스에 catch를 안 붙였을 경우 생기는 에러이다. 자주 볼 수 있으므로 외워두자)
    (노드 버전이 업이되면 이제 프로미스에 catch를 안 붙이면 프로세스가 죽을 수 있다고 경고하고있다.)

*/

// 정말 예상치 못한 에러가 발생해도 노드 프로세스를 죽이지 않게 하는 법
process.on('uncaughtException', (err) => {
    console.error("예기치 못한 에러", err);
});

setInterval( () => {
    throw new Error('서버를 고장내주마!');
}, 1000); // 1초 후 서버를 고장내보자

setTimeout( () => {
    console.log('실행됩니다');
}, 2000); // 2초 후 여전비 서버는 작동된다.

// 위에서 process.on 에 uncaughtException을 달아놓았기 때문에 어떤 에러로 인하 프로세스 킬은 되지 않는다.
// 다만 해당 에러는 직접 알아내서 수정해야 할 것이다.
// 콜백 함수의 동작이 보장되지 않으므로, 여기다가 에러가 난 이후 뭔가 해보겠다고 적는것은 옳지 않다.


// 프로세스 죽이기
// process.pid 하면 현재 노드프로세스의 id를 알 수 있다.
// 윈도우
$ netstat -ano | findstr 포트번호
$ taskkill /pid 프로세스아이디 /f 


// 맥/리눅스
$ lsof -i tcp:포트번호
$ kill -9 프로세스 아이디




